version: '2'
services:
  influxdb:
    image: influxdb:latest
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
  chronograf:
    image: chronograf:latest
    ports:
      - '127.0.0.1:8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'docker.io/bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - "7071:7071"
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_JMX_PORT: 7071
    depends_on:
      - zookeeper
  jmx_exporter:
    image: 'bitnami/jmx-exporter:latest'
    ports:
      - 5556:5556
    environment:
      SERVICE_PORT: 5556
    volumes:
      - ./config.yml:/opt/jmx_exporter/config.yml
    depends_on:
      - kafka
  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  redis:
    image: 'docker.io/bitnami/redis:latest'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'
  redis_exporter:
    image: 'bitnami/redis-exporter:latest'
    command: -redis.addr redis://redis:6379
    ports:
      - 9121:9121
  go-app:
    image: golang:latest
    volumes:
      - .:/go/src/go-with-compose
    working_dir: /go/src/go-with-compose
    command: sh -c "go get -u github.com/prometheus/client_golang/prometheus/promhttp && go run main.go"
    ports:
      - '2112:2112'
  python-app:
    image: python:3.7-slim
    volumes:
      - .:/project
    working_dir: /project
    command: sh -c "pip install prometheus-client && ls -l && python /project/pyt.py"
    ports:
      - '8000:8000'


volumes:
  influxdb-storage:
  chronograf-storage:
  grafana-storage:
  zookeeper_data:
  kafka_data:
  prometheus-data:
  redis_data:
